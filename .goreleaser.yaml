# GoReleaser configuration for intellijapp.
#
# IMPORTANT: This configuration is optimized for CI/CD pipelines where
# all platform-specific packages are pre-built by the package job.
# GoReleaser's role is ONLY to create the GitHub release and upload artifacts.
#
# This approach follows KISS and DRY principles:
# - KISS: GoReleaser does one thing well (release management)
# - DRY: No duplicate builds (package job already built everything)
# - Separation of concerns: Build (package job) vs Release (release job)

project_name: intellijapp

# Disable builds entirely - all binaries are pre-built by package job
# This prevents GoReleaser from trying to compile Go code (which would
# fail on Linux due to missing CGO dependencies)
builds:
  - skip: true

# Disable archives since we're uploading installer packages directly
archives:
  - id: skip-archives
    format: binary

# Skip checksum generation for now (can enable later if needed)
checksum:
  disable: true

changelog:
  use: git
  filters:
    exclude:
      - '^docs?:'
      - '^ci:'

release:
  draft: true
  # Upload additional files from bin/ directory (e.g., installers, packages)
  # This allows including files like intellijapp-amd64-installer.exe alongside the main binary
  extra_files:
    - glob: ./bin/*-installer.exe  # Windows NSIS installers
    - glob: ./bin/*.AppImage       # Linux AppImage
    - glob: ./bin/*.deb            # Debian packages
    - glob: ./bin/*.rpm            # RedHat packages
    - glob: ./bin/*.dmg            # macOS disk images
    - glob: ./bin/*.pkg            # macOS installer packages
